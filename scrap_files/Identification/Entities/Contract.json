
{
  "resourceType" : "Contract",
  // from Resource: id, meta, implicitRules, and language
  // from DomainResource: text, contained, extension, and modifierExtension
  "identifier" : { Identifier }, // Contract number
  "status" : "<code>", // amended | appended | cancelled | disputed | entered-in-error | executable | executed | negotiable | offered | policy | rejected | renewed | revoked | resolved | terminated
  "issued" : "<dateTime>", // When this Contract was issued
  "applies" : { Period }, // Effective time
  "subject" : [{ Reference(Any) }], // Contract Target Entity
  "topic" : [{ Reference(Any) }], // Context of the Contract
  "authority" : [{ Reference(Organization) }], // Authority under which this Contract has standing
  "domain" : [{ Reference(Location) }], // Domain in which this Contract applies
  "type" : { CodeableConcept }, // Type or form
  "subType" : [{ CodeableConcept }], // Subtype within the context of type
  "action" : [{ CodeableConcept }], // Action stipulated by this Contract
  "actionReason" : [{ CodeableConcept }], // Rationale for the stiplulated action
  "decisionType" : { CodeableConcept }, // Decision by Grantor
  "contentDerivative" : { CodeableConcept }, // Content derived from the basal information
  "securityLabel" : [{ Coding }], // Security Labels that define affected resources
  "agent" : [{ // Entity being ascribed responsibility
    "actor" : { Reference(Contract|Device|Group|Location|Organization|Patient|
    Practitioner|RelatedPerson|Substance) }, // R!  Contract Agent Type
    "role" : [{ CodeableConcept }] // Role type of the agent
  }],
  "signer" : [{ // Contract Signatory
    "type" : { Coding }, // R!  Contract Signatory Role
    "party" : { Reference(Organization|Patient|Practitioner|RelatedPerson) }, // R!  Contract Signatory Party
    "signature" : [{ Signature }] // R!  Contract Documentation Signature
  }],
  "valuedItem" : [{ // Contract Valued Item List
    // entity[x]: Contract Valued Item Type. One of these 2:
    "entityCodeableConcept" : { CodeableConcept },
    "entityReference" : { Reference(Any) },
    "identifier" : { Identifier }, // Contract Valued Item Number
    "effectiveTime" : "<dateTime>", // Contract Valued Item Effective Tiem
    "quantity" : { Quantity(SimpleQuantity) }, // Count of Contract Valued Items
    "unitPrice" : { Money }, // Contract Valued Item fee, charge, or cost
    "factor" : <decimal>, // Contract Valued Item Price Scaling Factor
    "points" : <decimal>, // Contract Valued Item Difficulty Scaling Factor
    "net" : { Money } // Total Contract Valued Item Value
  }],
  "term" : [{ // Contract Term List
    "identifier" : { Identifier }, // Contract Term Number
    "issued" : "<dateTime>", // Contract Term Issue Date Time
    "applies" : { Period }, // Contract Term Effective Time
    "type" : { CodeableConcept }, // Contract Term Type or Form
    "subType" : { CodeableConcept }, // Contract Term Type specific classification
    "topic" : [{ Reference(Any) }], // Context of the Contract term
    "action" : [{ CodeableConcept }], // Contract Term Activity
    "actionReason" : [{ CodeableConcept }], // Purpose for the Contract Term Action
    "securityLabel" : [{ Coding }], // Security Labels that define affected terms
    "agent" : [{ // Contract Term Agent List
      "actor" : { Reference(Contract|Device|Group|Location|Organization|Patient|
     Practitioner|RelatedPerson|Substance) }, // R!  Contract Term Agent Subject
      "role" : [{ CodeableConcept }] // Type of the Contract Term Agent
    }],
    "text" : "<string>", // Human readable Contract term text
    "valuedItem" : [{ // Contract Term Valued Item List
      // entity[x]: Contract Term Valued Item Type. One of these 2:
      "entityCodeableConcept" : { CodeableConcept },
      "entityReference" : { Reference(Any) },
      "identifier" : { Identifier }, // Contract Term Valued Item Number
      "effectiveTime" : "<dateTime>", // Contract Term Valued Item Effective Tiem
      "quantity" : { Quantity(SimpleQuantity) }, // Contract Term Valued Item Count
      "unitPrice" : { Money }, // Contract Term Valued Item fee, charge, or cost
      "factor" : <decimal>, // Contract Term Valued Item Price Scaling Factor
      "points" : <decimal>, // Contract Term Valued Item Difficulty Scaling Factor
      "net" : { Money } // Total Contract Term Valued Item Value
    }],
    "group" : [{ Content as for Contract.term }] // Nested Contract Term Group
  }],
  // binding[x]: Binding Contract. One of these 2:
  "bindingAttachment" : { Attachment },
  "bindingReference" : { Reference(Composition|DocumentReference|
   QuestionnaireResponse) },
  "friendly" : [{ // Contract Friendly Language
    // content[x]: Easily comprehended representation of this Contract. One of these 2:
    "contentAttachment" : { Attachment }
    "contentReference" : { Reference(Composition|DocumentReference|
    QuestionnaireResponse) }
  }],
  "legal" : [{ // Contract Legal Language
    // content[x]: Contract Legal Text. One of these 2:
    "contentAttachment" : { Attachment }
    "contentReference" : { Reference(Composition|DocumentReference|
    QuestionnaireResponse) }
  }],
  "rule" : [{ // Computable Contract Language
    // content[x]: Computable Contract Rules. One of these 2:
    "contentAttachment" : { Attachment }
    "contentReference" : { Reference(DocumentReference) }
  }]
}
